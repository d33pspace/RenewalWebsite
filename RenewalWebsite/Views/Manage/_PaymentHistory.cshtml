@model RenewalWebsite.Models.SearchViewModel
@using RenewalWebsite.Services
@using RenewalWebsite.Models
@using Microsoft.AspNetCore.Identity

@inject UserManager<ApplicationUser> UserManager
@inject ICurrencyService CurrencyService
@{
    Layout = null;
    ApplicationUser user = await UserManager.GetUserAsync(User);
    var culture = CurrencyService.GetCurrentLanguage().TwoLetterISOLanguageName.ToLower();
}
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
<link href="~/js/daterangepicker/daterangepicker.css" rel="stylesheet" />
<link rel="stylesheet" href="~/lib/font-awesome/css/font-awesome.min.css" type="text/css">
<link href="~/css/buttonLoader.css" rel="stylesheet" />
<script src="~/lib/jquery/dist/jquery.js" type="text/javascript"></script>
<script src="~/js/daterangepicker/daterangepicker.js"></script>
<script src="~/js/jquery.inputmask.bundle.js"></script>
<script src="~/js/jquery.buttonLoader.js"></script>

<input type="hidden" id="hdnOfType" name="TabId" value="LastYear" />

@if (user.HistoryView == true)
{
    @if (Model.HasHistory != false)
    {
        @Html.HiddenFor(model => model.showUSD, new { @id = "showUSD" })
        @Html.HiddenFor(model => model.FromDate, new { @id = "FromDate" })
        @Html.HiddenFor(model => model.ToDate, new { @id = "ToDate" })
        @Html.HiddenFor(model => model.typeOfHistory, new { @id = "typeOfHistory" })

        <div class="form-row">
            <div class="col-md-12">
                <div id="divInvoiceHistory">

                </div>
            </div>
        </div>
        @if (culture == "en")
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group col-md-6" id="divUSD" style="display:none;">
                        <input type="checkbox" id="usd" name="usd" onclick="changeValue(this)" /> @Localizer["Show USD conversion"]
                        @Html.ValidationMessageFor(model => model.showUSD)
                    </div>
                </div>
            </div>
        }
        <div class="form-row" id="BtnPdf">
            <input type="button" style="display:none" id="btnSave" class="btn btn-default hide" value="@Localizer["Search"]" onclick="GenerateData()" />
            <button type="button" id="btnSubmitPDF" class="btn btn-default has-spinner" onclick="GeneratePDF()">@Localizer["PDF"]</button>
            @*<input type="submit" id="btnPDF" class="btn btn-default hide" value="PDF" style="display:none"/>*@
        </div>

        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="form-row">
            <div class="" id="BtnFilter">
                <button type="button" id="btnLast12Months" class="btn btn-default has-spinner" data-name="Last12Months">@Localizer["Last 12 Months"]</button>
                <button type="button" id="btnThisYear" class="btn btn-default has-spinner" data-name="ThisYear">@Localizer["This Year"]</button>
                <button type="button" id="btnLastYear" class="btn btn-default has-spinner" data-name="LastYear">@Localizer["Last Year"]</button>
                <button type="button" id="btnAllHistory" class="btn btn-default has-spinner" data-name="AllHistory">@Localizer["All History"]</button>
            </div>
        </div>

        <div class="form-row" id="idOfMessage" style="display:none">
            <div class="col-sm-offset-4 col-sm-8">
                <span style="color:#d11241">@Localizer["Requested data not available, Try another."]</span>
            </div>
        </div>
        <div class="form-row" id="idOfErrorMessage" style="display:none">
            <div class="col-sm-offset-4 col-sm-8">
                <span style="color:#d11241">@Localizer["Something went wrong, while fetching history."]</span>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-12">
                <p>@Localizer["No History"]</p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <a asp-action="Index" asp-controller="Donate" class="btn btn-default">@Localizer["Make a gift now"]</a>
            </div>
        </div>
    }
}
else
{
    @if (Model.HasHistory != false)
    {
        <div class="row">
            <div class="col-md-12">
                <div id="divConfirmation" class="alert alert-danger" style="display:none;">
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <p>@Localizer["To use this feature, please first confirm your email address"]</p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <button type="button" id="btnSendConfirmation" class="btn btn-default has-spinner" onclick=" SendConfirmationMail()">@Localizer["Send confirmation link"]</button>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-md-12">
                <p>@Localizer["No History"]</p>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <a asp-action="Index" asp-controller="Donate" class="btn btn-default">@Localizer["Make a gift now"]</a>
            </div>
        </div>
    }
}

<div id="divPDFFilePath">
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#btnSubmitPDF").hide();
        $("#BtnFilter").hide();
        $(":input").inputmask();
        var type = $("#hdnOfType").val();
        GenerateData(type);
        $('#btnLast12Months,#btnThisYear,#btnLastYear,#btnAllHistory').click(function () {
            var btn = $(this);
            $(btn).buttonLoader('start',"@Localizer["Please wait"]");
            var name = $(btn).attr('data-name');
            GenerateData(name, btn);
        });

        var hasHistory = "@Model.HasHistory";
        var historyView = "@user.HistoryView";

        if (hasHistory == "False" && historyView == "False") {
            $.ajax({
                url: "/Manage/UpdateHistoryStatus",
                data: {},
                type: 'GET',
                success: function (data) {
                }
            });
        }
    });

    function displayUSDOption(type) {
        $.ajax({
            url: "/Manage/DisplayUsdOption",
            data: {
                typeOfHistory: type
            },
            type: 'POST',
            success: function (data) {
                if (data == true) {
                    $('#divUSD').css('display', 'block');
                    //$("#usd").prop("checked", false);
                    //$('#showUSD').val(false);
                }
                else {
                    $('#divUSD').css('display', 'none');
                }
            }
        });
    };

    function changeValue(item) {
        $('#showUSD').val(item.checked);
        $('#usd').prop("disabled", true);
        GenerateData($("#hdnOfType").val(), null);
    };

    function GenerateData(type, button) {
        $('#divPDFFilePath').html('');
        $("#hdnOfType").val(type);
        var showUsd = $('#showUSD').val();
        $('#divInvoiceHistory').html('');
        $.ajax({
            url: "/Manage/GetPaymentHistory",
            data: {
                showUSD: showUsd,
                typeOfHistory: type
            },
            type: 'POST',
            success: function (data) {
                $('#divInvoiceHistory').append(data);
                $("#BtnFilter").show();
                var HiddenfildTypeIsNull = $("#hdmIsInvoiseHistoryExists").val();
                if (HiddenfildTypeIsNull == 0) { $("#btnSubmitPDF").hide(); }
                else { $("#btnSubmitPDF").show(); }
                displayUSDOption(type);
                if (button != null) {
                    $(button).buttonLoader('stop');
                }
                $('#usd').prop("disabled", false);
            }
        });
    }

    function GeneratePDF() {
        var btn = $('#btnSubmitPDF');
        $(btn).buttonLoader('start',"@Localizer["Please wait"]");
        $("#typeOfHistory").val($("#hdnOfType").val());
        $.ajax({
            url: "/Manage/GetInvoicePdf",
            data: {
                model: {
                    typeOfHistory: $("#typeOfHistory").val(),
                    showUSD: $('#showUSD').val()
                },
            },
            type: 'POST',
            success: function (data) {
                $('#divPDFFilePath').html('');
                $('#divPDFFilePath').html(data);
                $(btn).buttonLoader('stop');
            }
        });
        //$('#btnPDF').trigger('click');
    };


    function SendConfirmationMail() {
        var btn = $('#btnSendConfirmation');
        $(btn).buttonLoader('start',"@Localizer["Please wait"]");
        $.ajax({
            url: "/Manage/SendInvoiceHistoryConfirmation",
            data: {},
            type: 'GET',
            success: function (data) {
                if (data.status == "0") {
                    $('#divConfirmation').show();
                    $('#divConfirmation').removeClass('alert alert-success');
                    $('#divConfirmation').addClass('alert alert-danger');
                    $('#divConfirmation').text(data.data);
                }
                else {
                    $('#divConfirmation').show();
                    $('#divConfirmation').removeClass('alert alert-danger');
                    $('#divConfirmation').addClass('alert alert-success');
                    $('#divConfirmation').text(data.data);
                }
                $(btn).buttonLoader('stop');
            }
        });
    }
</script>
